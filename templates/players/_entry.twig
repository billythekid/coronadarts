{% extends "_layout" %}
{% set title = entry.title ~ "'s Stats | Players" %}

{% block content %}
  {% set games = craft.entries.section('games').with([
    'children', 'players', 'player1', 'player2', 'highScores.player', 'highCheckouts.player',
    'children.player1','children.player2','children.highScores.player','children.highCheckouts.player'
  ]).orderBy('postDate DESC').relatedTo(entry).all() %}
  {% set gamesPlayed = games | filter(game=>game.level == 2) %}

  {% set competitions = games| filter(game=>game.level == 1) %}

  {% set lastGame = gamesPlayed is not empty ? gamesPlayed | first : null %}
  {% set extremeAdverbs = [
    "",
    "absolutely",
    "altogether",
    "completely",
    "comprehensively",
    "conclusively",
    "considerably",
    "decidedly",
    "disturbingly",
    "effectively",
    "embarrasingly",
    "firmly",
    "fully",
    "fucking",
    "fucking",
    "fucking",
    "fucking",
    "fucking",
    "fucking",
    "fucking",
    "greatly",
    "immensely",
    "mightily",
    "mortifyingly",
    "perfectly",
    "seriously",
    "solidly",
    "thoroughly",
    "totally",
    "tremendously",
    "ultimately",
    "unconditionally",
    "utterly",
    "wholly",
  ] %}
  {% set extremeVerbs = [
    "abolished",
    "annihilated",
    "conquered",
    "crushed",
    "cunted",
    "decimated",
    "demolished",
    "destroyed",
    "eradicated",
    "erased",
    "fucked",
    "finished off",
    "gubbed",
    "humped",
    "invalidated",
    "kicked in the nuts",
    "killed",
    "massacred",
    "murdered",
    "nullified",
    "nutted",
    "obliterated",
    "overpowered",
    "overwhelmed",
    "owned",
    "pummelled",
    "rattled",
    "ruined",
    "slaughtered",
    "twatted",
    "wasted",
    "wellied",
    "wiped out",
    "wrecked",
  ] %}
  {% set passiveAdverbs = [
    "",
    "closely",
    "finally",
    "lightly",
    "more or less",
    "narrowly",
    "marginally"
  ] %}
  {% set passiveWinVerbs = [
    "beat",
    "bested",
    "overcame",
    "pipped",
    "scraped past",
    "stole it from",
    "struggled past",
    "thwarted",
    "took",
    "undid",
  ] %}
  {% set passiveLossVerbs = [
    "beaten",
    "bested",
    "overcome",
    "pipped",
    "taken",
  ] %}
  {% set greatWinSmackTalk = (entry.title ~ " " ~ random(extremeAdverbs) ~ " " ~ random(extremeVerbs) ~ " ")|replace("  ", " ") %}
  {% set justWonSmackTalk =  (entry.title ~ " " ~ random(passiveAdverbs) ~ " " ~ random(passiveWinVerbs) ~ " ")|replace("  ", " ") %}
  {% set completeLossSmackTalk = (entry.title ~ random([" got ", " was "]) ~ random(extremeAdverbs) ~ " " ~ random(extremeVerbs) ~ " by ")|replace("  ", " ") %}
  {% set narrowLossSmackTalk =  (entry.title ~ random([" got ", " was "]) ~ random(passiveAdverbs) ~ " " ~ random(passiveLossVerbs) ~ " by ")|replace("  ", " ") %}
  {# If they were at home and won, else if they were the away player and won, or were the home player and got beat, or anything else (away player and got beat), tell the story #}
  {% set lastResult = ', well who knows, Billy made this! (this is an error, tell Billy about it.)' %}

  {% if lastGame ?? false %}
    {% if ( ( lastGame.player1[0].id == entry.id ) and lastGame.player1LegsWon > lastGame.player2LegsWon ) %}
      {# won at home #}
      {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ? greatWinSmackTalk : justWonSmackTalk %}
      {% set lastResult = prefix ~ lastGame.player2[0].title %}
    {% elseif ( ( lastGame.player2[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}
      {# won away #}
      {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ? greatWinSmackTalk : justWonSmackTalk %}
      {% set lastResult = prefix ~ lastGame.player1[0].title %}
    {% elseif ( ( lastGame.player1[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}
      {# lost at home #}
      {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ? completeLossSmackTalk : narrowLossSmackTalk %}
      {% set lastResult = prefix ~ lastGame.player2[0].title %}
    {% else %}
      {# lost away #}
      {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ? completeLossSmackTalk : narrowLossSmackTalk %}
      {% set lastResult = prefix ~ lastGame.player1[0].title %}
    {% endif %}

    {% set lastResult = lastResult ~ ", " ~ lastGame.player1LegsWon ~ " - " ~ lastGame.player2LegsWon %}
  {% endif %}

  {% set homeGames = gamesPlayed|filter(game => game.player1[0].id == entry.id) %}
  {% set awayGames = gamesPlayed|filter(game => game.player2[0].id == entry.id) %}
  {% set homeGamesWon = homeGames|filter(game => game.player1LegsWon > game.player2LegsWon) %}
  {% set awayGamesWon = awayGames|filter(game => game.player2LegsWon > game.player1LegsWon) %}
  {% set homeAgainstPlayers = homeGames|map(game => game.player2[0].title) %}
  {% set awayAgainstPlayers = awayGames|map(game => game.player1[0].title) %}
  {% set uniqueHomeAgainstPlayers = homeAgainstPlayers|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set uniqueAwayAgainstPlayers = awayAgainstPlayers|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set uniquePlayers = (uniqueHomeAgainstPlayers|merge(uniqueAwayAgainstPlayers))|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set mostPlayedAgainst = craft.league.mostPlayed(entry) %}
  {% set highScores = [] %}
  {% set highCheckouts = [] %}
  {% for game in gamesPlayed %}
    {% for score in game.highScores %}
      {% if (score.player | first).id == entry.id %}
        {% set highScores = highScores|merge([
          {score: score.score, game: game}
        ]) %}
      {% endif %}
    {% endfor %}

    {% set highScores = highScores | sort((a,b) => b.score <=> a.score) %}

    {% for checkout in game.highCheckouts %}
      {% if checkout.player[0].id == entry.id %}
        {% set highCheckouts = highCheckouts|merge([
          {checkout: checkout.checkout, game: game}
        ]) %}
      {% endif %}
    {% endfor %}

    {% set highCheckouts = highCheckouts | sort((a,b) => b.checkout <=> a.checkout) %}


  {% endfor %}

  <div class="block mx-auto max-w-screen-xl relative px-2">

    <h1 class="text-5xl text-center mb-4">Player stats for {{ entry.title }}</h1>
    <div class="leading-loose sm:leading-normal">
      <p class="align-top mb-5">
        {% if competitions is not empty %}
        {{ entry.title }} current positions in round robin competitions;</p>
      <ul class="px-2">
        {% for competition in competitions %}
          {% if competition.competitionType.value == "roundRobin" %}
            <li class="ml-2 list-disc"><strong>{{ craft.league.position(entry, competition) }}</strong> in {{ competition.title }}
            </li>
          {% endif %}
        {% endfor %}
      </ul>
      {% endif %}
      <p>{{ entry.title }} has played {{ gamesPlayed|length }} game{{ gamesPlayed|length != 1 ? 's' }} so far
        {%- if gamesPlayed is not empty -%}
          , against {{ uniquePlayers|length }} other player{{ uniquePlayers|length != 1 ? 's' }} ({{ uniquePlayers|join(', ', ', and ') }}) and
          {% if gamesPlayed|length != 1 %}
            won {{ homeGamesWon|length + awayGamesWon|length == gamesPlayed|length ? "all" }} {{ homeGamesWon|length + awayGamesWon|length }} of them.
            That's a {{ ( (homeGamesWon|length + awayGamesWon|length) / gamesPlayed|length * 100) | round }}% win rate.
          {% else %}
            {{ homeGamesWon|length + awayGamesWon|length > 0 ? "won it": "lost it" }}.
          {% endif %}
        {%- else %}
          so there's not much more we can say about {{ entry.title }}.
        {% endif %}
      </p>

      {% if gamesPlayed is not empty %}
        <div>
          <p>
            {% if homeGames|length %}
              {{ entry.title }} played {{ homeGames|length }} games as the "home" player and won {{ homeGamesWon|length == homeGames|length ? 'all' : homeGamesWon|length }} of those.
            {% endif %}

            {% if awayGames|length %}
              Of the {{ awayGames|length }} games as the "away" player, {{ entry.title }} won {{ awayGamesWon|length == awayGames|length ? 'all ' ~  awayGames|length : awayGamesWon|length }} game{{ awayGamesWon|length != 1 ? 's' }}.
            {% endif %}
          </p>
        </div>
      {% endif %}

      {% if gamesPlayed is not empty %}
        <p>
          {{ entry.title }} has played
          {% if homeGames|length %}
            {{ uniqueHomeAgainstPlayers|join(', ', ', and ') }} at home{% if awayGames|length %} and {% else %}.{% endif %}
          {% endif %}
          {% if awayGames|length %}
            {{ uniqueAwayAgainstPlayers|join(', ', ', and ') }} away.
          {% endif %}
        </p>
      {% endif %}

      {% if lastGame %}
        <p>The last time {{ entry.title }} played was
          <a class="underline" href="{{ lastGame.url }}">{{ lastGame.postDate|date }}</a>, {{ lastGame.player1[0].id == entry.id ? "at home" : "away" }} against {{ lastGame.player1[0].id == entry.id ? lastGame.player2[0].title : lastGame.player1[0].title }} ({{ lastResult }}).
        </p>
      {% endif %}

      {% if gamesPlayed is not empty %}
        <p>The person {{ entry.title }} has played the most is {{ mostPlayedAgainst|keys|first|raw }}. They've met {{ mostPlayedAgainst|first == '1' ? "once" : mostPlayedAgainst|first == '2' ? "twice" :  mostPlayedAgainst|first ~ " times" }}.</p>
      {% endif %}

      {% if highScores is not empty %}
        <p>{{ entry.title }} has hit {{ highScores|length }} score{{ highScores|length != 1 ? 's' }} of at least 140 points;</p>
        <ul class="p-5">
          {% for score in highScores %}
            <li class="ml-2 list-disc">{{ score.score }}
              <a class='underline' href='{{ score.game.url }}'>against {{ score.game.title | replace(entry.title, '') | replace(' vs ', '') }}</a>
            </li>
          {% endfor %}
        </ul>
      {% endif %}

      {% if highCheckouts is not empty %}
        <p>{{ entry.title }} has checked out {{ highCheckouts|length }} time{{ highCheckouts|length != 1 ? 's' }} with 100 or more;</p>
        <ul class="p-5">
          {% for score in highCheckouts %}
            <li class="ml-2 list-disc">{{ score.checkout }}
              <a class='underline' href='{{ score.game.url }}'>against {{ score.game.title | replace(entry.title, '') | replace(' vs ', '') }}</a>
            </li>
          {% endfor %}
        </ul>
      {% endif %}
    </div>

    {% set tonEighties = highScores|filter(score=>score.score == 180) %}
    {% set bigFishes = highCheckouts|filter(checkout=>checkout.checkout == 170) %}
    {% if tonEighties is not empty or bigFishes is not empty %}

      <div class="text-yellow-200 p-20 mt-5 bg-black text-2xl text-center">

        {% if bigFishes is not empty %}
          <p>
            {{ entry.title }} has only gone and checked out {{ bigFishes|length == 1 ? 'a' : bigFishes|length }} big fish{{ bigFishes|length != 1 ? 'es;' }} against
            {% for fish in bigFishes %}
            <span>{{ not loop.first ? ', ' }}{{ loop.last ? " and " }}<a class="underline" href="{{ fish.game.url }}">{{ fish.game.title|replace(entry.title,'')|replace(' vs ', '') }}</a>{{ loop.last ? '!' }}
            {% endfor %}
          </p>
        {% endif %}

        {% if tonEighties is not empty %}
          <p>
            {{ entry.title }} has only gone and hit {{ tonEighties|length == 1 ? 'a' : tonEighties|length }} 180{{ tonEighties|length != 1 ? 's;' }} against
            {% spaceless %}
              {% for one80 in tonEighties %}
                <span>{{ not loop.first ? ', ' }}{{ loop.last ? " and " }}<a class="underline" href="{{ one80.game.url }}">{{ one80.game.title|replace(entry.title,'')|replace(' vs ', '') }}</a></span>{{ loop.last ? '!' }}
              {% endfor %}
            {% endspaceless %}
          </p>
        {% endif %}
      </div>
    {% endif %}

    {% if gamesPlayed is not empty %}
      <div class="leading-loose sm:leading-normal">
        <h2 class="text-3xl my-5">{{ entry.title }}'s Game summaries</h2>
        {% for league in competitions %}
          {# <h3 class="my-2">{{ league.title }}</h3> #}
          {% for lastGame in league.children | filter(game=> game.player1[0].id == entry.id or game.player2[0].id == entry.id) | sort((a,b) => b.postDate <=> a.postDate) %}
            {% set greatWinSmackTalk = (entry.title ~ " " ~ random(extremeAdverbs) ~ " " ~ random(extremeVerbs) ~ " ")|replace("  ", " ") %}
            {% set justWonSmackTalk =  (entry.title ~ " " ~ random(passiveAdverbs) ~ " " ~ random(passiveWinVerbs) ~ " ")|replace("  ", " ") %}
            {% set completeLossSmackTalk = (entry.title ~ random([" got ", " was "]) ~ random(extremeAdverbs) ~ " " ~ random(extremeVerbs) ~ " by ")|replace("  ", " ") %}
            {% set narrowLossSmackTalk =  (entry.title ~ random([" got ", " was "]) ~ random(passiveAdverbs) ~ " " ~ random(passiveLossVerbs) ~ " by ")|replace("  ", " ") %}
            {% if ( ( lastGame.player1[0].id == entry.id ) and lastGame.player1LegsWon > lastGame.player2LegsWon ) %}
              {# won at home #}
              {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ? greatWinSmackTalk : justWonSmackTalk %}
              {% set lastResult = prefix ~ lastGame.player2[0].title %}
            {% elseif ( ( lastGame.player2[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}
              {# won away #}
              {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ? greatWinSmackTalk : justWonSmackTalk %}
              {% set lastResult = prefix ~ lastGame.player1[0].title %}
            {% elseif ( ( lastGame.player1[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}
              {# lost at home #}
              {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ? completeLossSmackTalk : narrowLossSmackTalk %}
              {% set lastResult = prefix ~ lastGame.player2[0].title %}
            {% else %}
              {# lost away #}
              {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ? completeLossSmackTalk : narrowLossSmackTalk %}
              {% set lastResult = prefix ~ lastGame.player1[0].title %}
            {% endif %}

            {% set lastResult = lastResult ~ ", " ~ lastGame.player1LegsWon ~ " - " ~ lastGame.player2LegsWon %}
            <p>
              {{ lastGame.postDate|date }} -
              <a class="underline" href="{{ lastGame.url }}"><strong>{{ lastGame.title }}</strong></a> - {{ lastResult }} in {{ league.link|attr({class:"underline"}) }}.
            </p>
          {% endfor %}
        {% endfor %}
      </div>
    {% endif %}
  </div>
{% endblock %}
