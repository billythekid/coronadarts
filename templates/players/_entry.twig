{% extends "_layout" %}
{% set title = entry.title ~ "'s Stats | Players" %}

{% block content %}
  {% set gamesPlayed = craft.entries.section('games').with(['player1', 'player2', 'highScores.player', 'highCheckouts.player']).orderBy('postDate DESC').relatedTo(entry).all() %}
  {% set lastGame = gamesPlayed[0] ?? null %}
  {% set extremeModifier = [
    "",
    "completely",
    "utterly",
    "fucking",
    "seriously",
    "decidedly",
    ""
  ] %}
  {% set greatWinSmackTalk = [
    "#{entry.title} " ~ random(extremeModifier) ~ " destroyed ",
    "#{entry.title} " ~ random(extremeModifier) ~ " humped ",
    "#{entry.title} " ~ random(extremeModifier) ~ " wasted ",
    "#{entry.title} " ~ random(extremeModifier) ~ " gubbed ",
    "#{entry.title} " ~ random(extremeModifier) ~ " obliterated ",
    "#{entry.title} " ~ random(extremeModifier) ~ " destroyed ",
    "#{entry.title} " ~ random(extremeModifier) ~ " wellied ",
    "#{entry.title} " ~ random(extremeModifier) ~ " pounded ",
    "#{entry.title} " ~ random(extremeModifier) ~ " pummelled ",
    "#{entry.title} " ~ random(extremeModifier) ~ " killed ",

  ] %}
  {% set justWonSmackTalk =  [
    "#{entry.title} stealing the match from ",
    "#{entry.title} narrowly beating ",
    "#{entry.title} scraping past ",
    "#{entry.title} luckily taking ",
    "#{entry.title} struggling past ",
    "#{entry.title} just managing to overcome ",
    "#{entry.title} closely beating ",
  ] %}
  {% set completeLossSmackTalk = [
    "#{entry.title} " ~ random(extremeModifier) ~ " destroyed by ",
    "#{entry.title} got " ~ random(extremeModifier) ~ " humped by ",
    "#{entry.title} " ~ random(extremeModifier) ~ " took a gubbing from ",
    "#{entry.title} " ~ random(extremeModifier) ~ " obliterated by ",
    "#{entry.title} " ~ random(extremeModifier) ~ " taking a beating from ",
    "#{entry.title} " ~ random(extremeModifier) ~ " accepted an absolute pounding off ",
    "#{entry.title} was " ~ random(extremeModifier) ~ " pummelled by ",
    "#{entry.title} " ~ random(extremeModifier) ~ " took a right rogering from ",
    "#{entry.title} " ~ random(extremeModifier) ~ " killed by "
  ] %}
  {% set narrowLossSmackTalk = [
    "#{entry.title} had victory stolen by ",
    "#{entry.title} was just pipped by ",
    "#{entry.title} was closely beaten by ",
    "#{entry.title} unlickily taken by ",
    "#{entry.title} fought hard but was eventually beaten by ",
    "#{entry.title} finding themself narrowly overcome by "
  ] %}
  {# If they were at home and won, else if they were the away player and won, or were the home player and got beat, or anything else (away player and got beat), tell the story #}
  {% set lastResult = ', well who knows, Billy made this! (this is an error, tell Billy about it.)' %}
  {% if lastGame %}
    {% if ( ( lastGame.player1[0].id == entry.id ) and lastGame.player1LegsWon > lastGame.player2LegsWon ) %}

      {# won at home #}
      {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ?
        random(greatWinSmackTalk) :
        random(justWonSmackTalk) %}
      {% set lastResult = prefix ~ lastGame.player2[0].title %}

    {% elseif ( ( lastGame.player2[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}

      {# won away #}
      {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ?
        random(greatWinSmackTalk) :
        random(justWonSmackTalk) %}
      {% set lastResult = prefix ~ lastGame.player1[0].title %}

    {% elseif ( ( lastGame.player1[0].id == entry.id ) and lastGame.player2LegsWon > lastGame.player1LegsWon ) %}

      {# lost at home #}
      {% set prefix = lastGame.player2LegsWon - lastGame.player1LegsWon == 2 ?
        random(completeLossSmackTalk) :
        random(narrowLossSmackTalk) %}
      {% set lastResult = prefix ~ lastGame.player2[0].title %}

    {% else %}

      {# lost away  #}

      {% set prefix = lastGame.player1LegsWon - lastGame.player2LegsWon == 2 ?
        random(completeLossSmackTalk) :
        random(narrowLossSmackTalk) %}
      {% set lastResult = prefix ~ lastGame.player1[0].title %}
    {% endif %}

    {% set lastResult = lastResult ~ ", " ~ lastGame.player1LegsWon ~ " - " ~ lastGame.player2LegsWon %}
  {% endif %}

  {% set homeGames = gamesPlayed|filter(game => game.player1[0].id == entry.id) %}
  {% set awayGames = gamesPlayed|filter(game => game.player2[0].id == entry.id) %}
  {% set homeGamesWon = homeGames|filter(game => game.player1LegsWon > game.player2LegsWon) %}
  {% set awayGamesWon = awayGames|filter(game => game.player2LegsWon > game.player1LegsWon) %}
  {% set homeAgainstPlayers = homeGames|map(game => game.player2[0].title) %}
  {% set awayAgainstPlayers = awayGames|map(game => game.player1[0].title) %}
  {% set uniqueHomeAgainstPlayers = homeAgainstPlayers|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set uniqueAwayAgainstPlayers = awayAgainstPlayers|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set uniquePlayers = (uniqueHomeAgainstPlayers|merge(uniqueAwayAgainstPlayers))|reduce((unique, player) => player in unique ? unique : unique|merge([player]), []) %}
  {% set mostPlayedAgainst = craft.league.mostPlayed(entry) %}
  {% set highScores = [] %}
  {% set highCheckouts = [] %}
  {% for game in gamesPlayed %}

    {% for score in game.highScores %}
      {% if score.player[0].id == entry.id %}
        {% set highScores = highScores|merge([
          {score: score.score, game: game}
        ]) %}
      {% endif %}
    {% endfor %}

    {% for checkout in game.highCheckouts %}
      {% if checkout.player[0].id == entry.id %}
        {% set highCheckouts = highCheckouts|merge([
          {checkout: checkout.checkout, game: game}
        ]) %}
      {% endif %}
    {% endfor %}

  {% endfor %}

  <h1 class="text-5xl text-center mb-4">Player stats for {{ entry.title }}</h1>

  <p>{{ entry.title }} is sitting <span class="text-2xl">{{ craft.league.position(entry) }}</span> in the league.</p>

  <p>{{ entry.title }} has played {{ gamesPlayed|length }} game{{ gamesPlayed|length != 1 ? 's' }} so far
    {%- if gamesPlayed is not empty -%}
      , against {{ uniquePlayers|length }} other player{{ uniquePlayers|length != 1 ? 's' }} ({{ uniquePlayers|join(', ', ' and ') }}) and
      {% if gamesPlayed|length != 1 %}
        won {{ homeGamesWon|length + awayGamesWon|length == gamesPlayed|length ? "all" }} {{ homeGamesWon|length + awayGamesWon|length }} of them.
      {% else %}
        {{ homeGamesWon|length + awayGamesWon|length > 0 ? "won it": "lost it" }}.
      {% endif %}
    {%- else %}
      so there's not much more we can say about {{ entry.title }}.
    {% endif %}
  </p>

  {% if homeGames|length %}
    <p>{{ entry.title }} played {{ homeGames|length }} games as the "home" player and won {{ homeGamesWon|length == homeGames|length ? 'all' : homeGamesWon|length }} of those.</p>
  {% endif %}

  {% if awayGames|length %}
    <p>Of the {{ awayGames|length }} games as the "away" player, {{ entry.title }} won {{ awayGamesWon|length == awayGames|length ? 'all ' ~  awayGames|length : awayGamesWon|length }} game{{ awayGamesWon|length != 1 ? 's' }}.</p>
  {% endif %}

  {% if gamesPlayed is not empty %}
    <p>
      {{ entry.title }} has played
      {% if homeGames|length %}
        {{ uniqueHomeAgainstPlayers|join(', ', ' and ') }} at home{% if awayGames|length %} and {% else %}.{% endif %}
      {% endif %}
      {% if awayGames|length %}
        {{ uniqueAwayAgainstPlayers|join(', ', ' and ') }} away.
      {% endif %}
    </p>
  {% endif %}

  {% if lastGame %}
    <p>The last time {{ entry.title }} played was
      <a class="underline" href="{{ lastGame.url }}">{{ lastGame.postDate|date }}</a>, {{ lastGame.player1[0].id == entry.id ? "at home" : "away" }} against {{ lastGame.player1[0].id == entry.id ? lastGame.player2[0].title : lastGame.player1[0].title }} ({{ lastResult }}).
    </p>
  {% endif %}

  {% if gamesPlayed is not empty %}
    <p>The person {{ entry.title }} has played the most is {{ mostPlayedAgainst|keys|first|raw }}. They've met {{ mostPlayedAgainst|first == '1' ? "once" : mostPlayedAgainst|first == '2' ? "twice" :  mostPlayedAgainst|first ~ " times" }}.</p>
  {% endif %}

  {% if highScores is not empty %}
    <p>
      {{ entry.title }} has hit {{ highScores|length }} score{{ highScores|length != 1 ? 's' }} of at least 140 points.
      {{ highScores
      | sort((a,b) => b.score <=> a.score)
      | map(score => score.score ~ " (<a class='underline' href='#{score.game.url}'>against #{score.game.title}</a>)"|replace(entry.title,'')|replace(' vs ', ''))
      | join(', ', ' and ') | raw }}.
    </p>
  {% endif %}

  {% if highCheckouts is not empty %}
    <p>
      {{ entry.title }} has checked out {{ highCheckouts|length }} time{{ highScores|length != 1 ? 's' }} with 100 or more.
      {{ highCheckouts
      | sort((a,b) => b.checkout <=> a.checkout)
      | map(checkout => checkout.checkout ~ " (<a class='underline' href='#{checkout.game.url}'>against #{checkout.game.title}</a>)"|replace(entry.title,'')|replace(' vs ', ''))
      | join(', ', ' and ') | raw }}.
    </p>
  {% endif %}

{% endblock %}
